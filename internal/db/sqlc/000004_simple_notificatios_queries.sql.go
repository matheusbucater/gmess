// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: 000004_simple_notificatios_queries.sql

package sqlc

import (
	"context"
	"time"
)

const createSimpleNotification = `-- name: CreateSimpleNotification :exec
INSERT INTO simple_notifications (notification_id, trigger_at) VALUES (?, ?)
`

type CreateSimpleNotificationParams struct {
	NotificationID int64
	TriggerAt      time.Time
}

func (q *Queries) CreateSimpleNotification(ctx context.Context, arg CreateSimpleNotificationParams) error {
	_, err := q.db.ExecContext(ctx, createSimpleNotification, arg.NotificationID, arg.TriggerAt)
	return err
}

const getSimpleNotificationByNotificationId = `-- name: GetSimpleNotificationByNotificationId :one
SELECT notification_id, trigger_at FROM simple_notifications WHERE notification_id = ?
`

func (q *Queries) GetSimpleNotificationByNotificationId(ctx context.Context, notificationID int64) (SimpleNotification, error) {
	row := q.db.QueryRowContext(ctx, getSimpleNotificationByNotificationId, notificationID)
	var i SimpleNotification
	err := row.Scan(&i.NotificationID, &i.TriggerAt)
	return i, err
}
